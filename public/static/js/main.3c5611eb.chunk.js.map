{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/ui/Navbar.js","helpers/calendar-message-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","user","map","e","_id","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","startLogout","dispatch","clear","logout","Navbar","name","useSelector","state","auth","useDispatch","className","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","end1","initEvent","notes","CalendarModal","modalOpen","ui","calendar","activeEvent","activeCell","useState","dateStart","setDateStart","dateEnd","setDateEnd","formValues","setFormValues","useEffect","console","log","handleInputChange","target","value","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","icon","text","a","id","rep","json","ok","msg","getState","uid","evento","eventStartAddNew","onChange","minDate","placeholder","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","locale","CalendarScreen","eventos","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","setItem","onSelectSlot","selectable","view","components","useForm","initialState","values","setValues","reset","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","email","password","resp","Date","getTime","PublicRoute","isLoggedIn","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"kQAAMA,EAAUC,6CAEVC,EAAgB,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACxCC,EAAG,UAAMN,EAAN,YAAiBG,GAE1B,MAAe,QAAXE,EACKE,MAAMD,GAENC,MAAMD,EAAK,CAChBD,OAAQA,EACRG,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,MAKrBQ,EAAgB,SAACT,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MACxCC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAC/C,MAAe,QAAXV,EACKE,MAAMD,EAAK,CAChBD,SACAG,QAAS,CACP,UAAWK,KAIRN,MAAMD,EAAK,CAChBD,OAAQA,EACRG,QAAS,CACP,eAAgB,mBAChB,UAAWK,GAGbJ,KAAMC,KAAKC,UAAUP,MCjCdY,EACE,kBADFA,EAEG,mBAFHA,EAIK,qBAJLA,EAKE,UALFA,EAQE,kBARFA,EASY,6BATZA,EAUG,wBAVHA,EAWG,wBAXHA,EAYE,uBAZFA,EAcS,qCAdTA,EAgBA,eAhBAA,EAmBC,gB,yCCpBDC,EAAgB,WAAwB,IAAvBC,EAAsB,uDAAb,GAAIC,EAAS,uCAClD,OAAOD,EAAOE,KAAI,SAACC,GACjB,OAAIA,EAAEF,KAAKG,MAAQH,EACV,2BACFE,GADL,IAEEE,IAAKC,IAAOH,EAAEE,KAAKE,SACnBC,MAAOF,IAAOH,EAAEK,OAAOD,WAGlB,OCgBPE,EAAc,SAACC,GACnB,MAAO,CACLC,KAAMb,EACNc,QAASF,IAWAG,EAAwB,WACnC,MAAO,CACLF,KAAMb,IAmBJgB,EAAe,SAACJ,GACpB,MAAO,CACLC,KAAMb,EACNc,QAASF,IAsBPK,EAAe,WACnB,MAAO,CACLJ,KAAMb,IAkBJkB,EAAc,SAAChB,GACnB,MAAO,CACLW,KAAMb,EACNc,QAASZ,ICtDPiB,EAAiB,WACrB,MAAO,CACLN,KAAMb,IAIJoB,EAAQ,SAACjB,GACb,MAAO,CACLU,KAAMb,EACNc,QAASX,IAIAkB,EAAc,WACzB,OAAO,SAACC,GACNxB,aAAayB,QACbD,EAASE,KACTF,ED0CK,CACLT,KAAMb,MCxCGwB,EAAS,WACpB,MAAO,CAAEX,KAAMb,ICzEJyB,EAAS,WAAO,IACnBC,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAtCH,KAEFJ,EAAWQ,cAIjB,OACE,yBAAKC,UAAU,mCACb,0BAAMA,UAAU,gBAAgBL,GAEhC,4BAAQK,UAAU,yBAAyBC,QAP1B,WACnBV,EAASD,OAOL,uBAAGU,UAAU,wBACb,2C,QCjBKE,G,kBAAW,CACtBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACN/B,MAAO,SACPgC,gBAAiB,+BACjBC,SAAU,SAACC,GAAD,8BAAyBA,EAAzB,QCVCC,EAAgB,SAAC,GAAa,IAAZnC,EAAW,EAAXA,MACrBoC,EAAgBpC,EAAhBoC,MAAO7C,EAASS,EAATT,KAEf,OACE,6BACE,8BAAO6C,GACP,qCAAW7C,EAAKuB,Q,0CCPTuB,EAAc,WACzB,MAAO,CACLpC,KAAMb,ICSJkD,GAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAGfC,IAAMC,cAAc,SACpB,IAAMC,GAAMpD,MAASqD,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,SAC5CC,GAAOxD,MAASqD,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,SAE7CE,GAAY,CAChBjB,MAAO,GACPkB,MAAO,GACPxD,MAAOkD,GAAInD,SACXF,IAAKyD,GAAKvD,UAGC0D,GAAgB,WAAO,IAC1BC,EAAczC,aAAY,SAACC,GAAD,OAAWA,EAAMyC,MAA3CD,UADyB,EAEGzC,aAAY,SAACC,GAAD,OAAWA,EAAM0C,YAAzDC,EAFyB,EAEzBA,YAAaC,EAFY,EAEZA,WAEflD,EAAWQ,cAJgB,EAKC2C,mBAASb,GAAInD,UALd,mBAK1BiE,EAL0B,KAKfC,EALe,OAMHF,mBAAST,GAAKvD,UANX,mBAM1BmE,EAN0B,KAMjBC,EANiB,OAQGJ,mBAASR,IARZ,mBAQ1Ba,EAR0B,KAQdC,EARc,KAUzBb,EAA6BY,EAA7BZ,MAAOlB,EAAsB8B,EAAtB9B,MAAOtC,EAAeoE,EAAfpE,MAAOH,EAAQuE,EAARvE,IAE7ByE,qBAAU,WACJT,GACFU,QAAQC,IAAIX,GACZQ,EAAcR,IAEdQ,EAAcd,MAEf,CAACM,EAAaQ,EAAeP,IAEhC,IAAMW,EAAoB,SAAC9E,GACzB0E,EAAc,2BACTD,GADQ,kBAEVzE,EAAE+E,OAAO1D,KAAOrB,EAAE+E,OAAOC,UAIxBC,EAAa,WACjBhE,EDtDK,CACLT,KAAMb,ICsDNsB,EAASP,KACTgE,EAAcd,KA+ChB,OACE,kBAAC,IAAD,CACEsB,OAAQnB,EAERoB,eAAgBF,EAChBG,MAAOvC,GACPwC,eAAgB,IAChB3D,UAAU,QACV4D,iBAAiB,eAEjB,gCAAMpB,EAAc,oBAAsB,eAA1C,KACA,6BACA,0BAAMxC,UAAU,YAAY6D,SA1CP,SAACvF,GACxBA,EAAEwF,iBAEF,INtC6BjF,EMsCvBkF,EAActF,IAAOE,GACrBqF,EAAYvF,IAAOD,GAEzB,OAAIuF,EAAYE,cAAcD,GACrBE,IAAKC,KAAK,CACfC,KAAM,QACNnD,MAAO,UACPoD,KAAM,mEAII,KAAVpD,EACKiD,IAAKC,KAAK,CACfC,KAAM,QACNnD,MAAO,UACPoD,KAAM,+BAKR9E,EADEiD,GNzDyB3D,EM0DDkE,ENzD9B,uCAAO,WAAOxD,GAAP,iBAAA+E,EAAA,+EAEezG,EAAc,UAAD,OAAWgB,EAAM0F,IAAM1F,EAAO,OAF1D,cAEG2F,EAFH,gBAGgBA,EAAIC,OAHpB,QAGG/G,EAHH,QAIMgH,GACPnF,EAASN,EAAaJ,IAEtBqF,IAAKC,KAAK,QAASzG,EAAKiH,IAAK,SAP5B,kDAUHzB,QAAQC,IAAR,MAVG,0DAAP,uDA3C8B,SAACtE,GAC/B,8CAAO,WAAOU,EAAUqF,GAAjB,uBAAAN,EAAA,+DACiBM,IAAW9E,KAAzB+E,EADH,EACGA,IAAKlF,EADR,EACQA,KADR,kBAGe9B,EAAc,SAAUgB,EAAO,QAH9C,cAGG2F,EAHH,gBAIgBA,EAAIC,OAJpB,QAIG/G,EAJH,QAMMgH,KACP7F,EAAM0F,GAAK7G,EAAKoH,OAAOP,GACvB1F,EAAMT,KAAO,CACXG,IAAKsG,EACLlF,KAAMA,GAERuD,QAAQC,IAAItE,GACZU,EAASX,EAAYC,KAbpB,kDAgBHqE,QAAQC,IAAR,MAhBG,0DAAP,wDMqGa4B,CAAiBhC,SAE5BQ,OAgBI,yBAAKvD,UAAU,cACb,sDACA,kBAAC,IAAD,CACEgF,SA5DoB,SAAC1G,GAC7BsE,EAAatE,GACb0E,EAAc,2BACTD,GADQ,IAEXpE,MAAOL,MAyDDgF,MAAOX,EACP3C,UAAU,kBAId,yBAAKA,UAAU,cACb,mDACA,kBAAC,IAAD,CACEgF,SA9DkB,SAAC1G,GAC3BwE,EAAWxE,GACX0E,EAAc,2BACTD,GADQ,IAEXvE,IAAKF,MA2DCgF,MAAOT,EACPoC,QAAStC,EACT3C,UAAU,kBAId,6BACA,yBAAKA,UAAU,cACb,iDACA,2BACElB,KAAK,OACLkB,UAAU,eACVkF,YAAY,uBACZvF,KAAK,QACLwF,aAAa,MACb7B,MAAOrC,EACP+D,SAAU5B,IAEZ,2BAAOmB,GAAG,YAAYvE,UAAU,wBAAhC,6BAKF,yBAAKA,UAAU,cACb,8BACElB,KAAK,OACLkB,UAAU,eACVkF,YAAY,QACZE,KAAK,IACLzF,KAAK,QACL2D,MAAOnB,EACP6C,SAAU5B,IAEZ,2BAAOmB,GAAG,YAAYvE,UAAU,wBAAhC,6BAKF,4BAAQlB,KAAK,SAASkB,UAAU,qCAC9B,uBAAGA,UAAU,gBACb,8CC9KGqF,GAAY,WACvB,IAAM9F,EAAWQ,cAIjB,OACE,4BAAQC,UAAU,sBAAsBC,QAJnB,WACrBV,EAAS2B,OAIP,uBAAGlB,UAAU,kBCPNsF,GAAiB,WAC5B,IAAM/F,EAAWQ,cAKjB,OACE,4BAAQC,UAAU,4BAA4BC,QAJ3B,WACnBV,ER8DF,uCAAO,WAAOA,EAAUqF,GAAjB,mBAAAN,EAAA,6DACGC,EAAOK,IAAWrC,SAASC,YAA3B+B,GADH,kBAIe1G,EAAc,UAAD,OAAW0G,GAAM,GAAI,UAJjD,cAIGC,EAJH,gBAKgBA,EAAIC,OALpB,QAKG/G,EALH,QAMMgH,GACPnF,EAASL,KAETgF,IAAKC,KAAK,QAASzG,EAAKiH,IAAK,SAT5B,kDAYHzB,QAAQC,IAAR,MAZG,0DAAP,2DQ1DI,uBAAGnD,UAAU,mBCSbuF,GAAYC,YAAgB/G,KAClCA,IAAOgH,OAAO,MAEP,IAAMC,GAAiB,WAC5B,IAAMnG,EAAWQ,cACT8E,EAAQjF,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAArC+E,IAER5B,qBAAU,WTiEqB,IAAC7E,EShE9BmB,GTgE8BnB,EShEHyG,ETiE7B,uCAAO,WAAOtF,GAAP,mBAAA+E,EAAA,+EAEezG,EAAc,UAF7B,cAEG2G,EAFH,gBAGgBA,EAAIC,OAHpB,OAGG/G,EAHH,OAIGS,EAASD,EAAcR,EAAKiI,QAASvH,GAE3CmB,EAASJ,EAAYhB,IANlB,kDAQH+E,QAAQC,IAAR,MARG,0DAAP,0DShEG,CAAC5D,EAASsF,IANqB,MAQFjF,aAAY,SAACC,GAAD,OAAWA,EAAM0C,YAArDpE,EAR0B,EAQ1BA,OAAQqE,EARkB,EAQlBA,YARkB,EASFE,mBAC9B3E,aAAaC,QAAQ,aAAe,SAVJ,mBAS3B4H,EAT2B,KASjBC,EATiB,KAwClC,OACE,yBAAK7F,UAAU,mBACb,kBAAC,EAAD,MACA,6BACE,6BACA,8BAEF,kBAAC,IAAD,CACEuF,UAAWA,GACXpH,OAAQA,EACR2H,cAAc,QACdC,YAAY,MACZ7F,SAAUA,EACV8F,gBA3BmB,SAACnH,EAAOF,EAAOH,EAAKyH,GAQ3C,MAAO,CAAEvC,MAPK,CACZwC,gBAAiBrB,IAAQhG,EAAMT,KAAKG,IAAM,UAAY,UACtD4H,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAsBLC,mBAzCgB,SAACjI,GACrBiB,EAAS2B,MAyCLsF,cAtCgB,SAAClI,GACrBiB,ETPK,CACLT,KAAMb,EACNc,QSKwBT,KAsCpBmI,OAnCe,SAACnI,GACpBuH,EAAYvH,GACZP,aAAa2I,QAAQ,WAAYpI,IAkC7BqI,aArBe,SAACrI,GACpBiB,EAASP,MAqBL4H,YAAY,EACZC,KAAMjB,EACNkB,WAAY,CACVjI,MAAOmC,KAGX,kBAAC,GAAD,MACCwB,GAAe,kBAAC,GAAD,MAEhB,kBAAC,GAAD,QCzFOuE,I,OAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAChBtE,mBAASsE,GADO,mBACrCC,EADqC,KAC7BC,EAD6B,KAGtCC,EAAQ,WACZD,EAAUF,IAGN5D,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B6D,EAAU,2BACLD,GADI,kBAEN5D,EAAO1D,KAAO0D,EAAOC,UAI1B,MAAO,CAAC2D,EAAQ7D,EAAmB+D,KCTxBC,GAAc,WAAO,IAAD,EACmBL,GAAQ,CACxDM,OAAQ,GACRC,UAAW,KAHkB,mBACxBC,EADwB,KACPC,EADO,OAKyBT,GAAQ,CAC9DU,MAAO,GACPC,OAAQ,GACRC,WAAY,GACZC,WAAY,KATiB,mBAKxBC,EALwB,KAKJC,EALI,KAYvBL,EAA0CI,EAA1CJ,MAAOC,EAAmCG,EAAnCH,OAAQC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAE7BrI,EAAWQ,cACTsH,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UAoBhB,OACE,yBAAKtH,UAAU,6BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,uCACA,0BAAM6D,SAvBM,SAACvF,GVnBG,IAACyJ,EAAOC,EUoB9B1J,EAAEwF,iBACFvE,GVrBuBwI,EUqBHV,EVrBUW,EUqBFV,EVpB9B,uCAAO,WAAO/H,GAAP,iBAAA+E,EAAA,sEACcnH,EAAc,OAAQ,CAAE4K,QAAOC,YAAY,QADzD,cACCC,EADD,gBAEcA,EAAKxD,OAFnB,QAEC/G,EAFD,QAGIgH,IACP3G,aAAa2I,QAAQ,QAAShJ,EAAKI,OACnCC,aAAa2I,QAAQ,mBAAmB,IAAIwB,MAAOC,WAEnD5I,EAASF,EAAM,CAAEwF,IAAKnH,EAAKmH,IAAKlF,KAAMjC,EAAKiC,SAE3CuE,IAAKC,KAAK,QAASzG,EAAKiH,IAAK,SAT1B,2CAAP,0DU0CU,yBAAK3E,UAAU,cACb,2BACElB,KAAK,OACLkB,UAAU,eACVkF,YAAY,SACZvF,KAAK,SACL2D,MAAO+D,EACPrC,SAAUwC,KAGd,yBAAKxH,UAAU,cACb,2BACElB,KAAK,WACLkB,UAAU,eACVkF,YAAY,gBACZvF,KAAK,YACL2D,MAAOgE,EACPtC,SAAUwC,KAGd,yBAAKxH,UAAU,cACb,2BAAOlB,KAAK,SAASkB,UAAU,YAAYsD,MAAM,aAKvD,yBAAKtD,UAAU,yBACb,wCACA,0BAAM6D,SA/CS,SAACvF,GAEtB,GADAA,EAAEwF,iBACE6D,IAAeC,EACjB,OAAO1D,IAAKC,KACV,QACA,6CACA,SVfqB,IAACxE,EAAMoI,EAAOC,EUkBrCzI,GVlBwBI,EUkBD8H,EVlBOM,EUkBAL,EVlBOM,EUkBCL,EVjB1C,uCAAO,WAAOpI,GAAP,iBAAA+E,EAAA,sEACcnH,EACjB,WACA,CAAEwC,OAAMoI,QAAOC,YACf,QAJG,cACCC,EADD,gBAMcA,EAAKxD,OANnB,QAMC/G,EAND,QAQIgH,IACP3G,aAAa2I,QAAQ,QAAShJ,EAAKI,OACnCC,aAAa2I,QAAQ,mBAAmB,IAAIwB,MAAOC,WAEnD5I,EAASF,EAAM,CAAEwF,IAAKnH,EAAKmH,IAAKlF,KAAMjC,EAAKiC,SAE3CuE,IAAKC,KAAK,QAASzG,EAAKiH,IAAK,SAd1B,2CAAP,0DUwDU,yBAAK3E,UAAU,cACb,2BACElB,KAAK,OACLkB,UAAU,eACVkF,YAAY,SACZvF,KAAK,QACL2D,MAAOmE,EACPzC,SAAU8C,KAGd,yBAAK9H,UAAU,cACb,2BACElB,KAAK,QACLkB,UAAU,eACVkF,YAAY,SACZvF,KAAK,SACL2D,MAAOoE,EACP1C,SAAU8C,KAGd,yBAAK9H,UAAU,cACb,2BACElB,KAAK,WACLkB,UAAU,eACVkF,YAAY,gBACZvF,KAAK,aACL2D,MAAOqE,EACP3C,SAAU8C,KAId,yBAAK9H,UAAU,cACb,2BACElB,KAAK,WACLkB,UAAU,eACVkF,YAAY,0BACZvF,KAAK,aACL2D,MAAOsE,EACP5C,SAAU8C,KAId,yBAAK9H,UAAU,cACb,2BAAOlB,KAAK,SAASkB,UAAU,YAAYsD,MAAM,uB,SCpHlD8E,GAAc,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,WAAuBC,EAAyB,EAApCC,UAAyBC,EAAW,2CAC5E,OACE,kBAAC,IAAD,iBACMA,EADN,CAEED,UAAW,SAACE,GACV,OAAQJ,EAAwC,kBAAC,IAAD,CAAUK,GAAG,MAAxC,kBAACJ,EAAcG,QCL/BE,GAAe,SAAC,GAAmD,IAAjDN,EAAgD,EAAhDA,WAAuBC,EAAyB,EAApCC,UAAyBC,EAAW,2CAC7E,OACE,kBAAC,IAAD,iBACMA,EADN,CAEED,UAAW,SAACE,GACV,OAAOJ,EACL,kBAACC,EAAcG,GAEf,kBAAC,IAAD,CAAUC,GAAG,gBCFVE,GAAY,WACvB,IAAMrJ,EAAWQ,cADY,EAEHH,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAA/C+I,EAFqB,EAErBA,SAAUhE,EAFW,EAEXA,IAMlB,OAJA5B,qBAAU,WACR1D,Eb0BF,uCAAO,WAAOA,GAAP,iBAAA+E,EAAA,sEACczG,EAAc,cAD5B,cACCoK,EADD,gBAEcA,EAAKxD,OAFnB,QAEC/G,EAFD,QAIIgH,IACP3G,aAAa2I,QAAQ,QAAShJ,EAAKI,OACnCC,aAAa2I,QAAQ,mBAAmB,IAAIwB,MAAOC,WAEnD5I,EAASF,EAAM,CAAEwF,IAAKnH,EAAKmH,IAAKlF,KAAMjC,EAAKiC,SAE3CJ,EAASH,KAVN,2CAAP,yDazBG,CAACG,IAEAsJ,EACK,yCAIP,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CACEC,OAAK,EACLC,KAAK,SACLR,UAAWnB,GACXiB,aAAcxD,IAEhB,kBAAC,GAAD,CACEiE,OAAK,EACLC,KAAK,IACLR,UAAW7C,GACX2C,aAAcxD,IAEhB,kBAAC,IAAD,CAAU6D,GAAG,U,SC5BjB1B,GAAe,CACnB3E,WAAW,G,SCEP2E,GAAe,CACnB7I,OAAQ,GACRqE,YAAa,KACbC,WAAY,MCdRuE,GAAe,CACnB6B,UAAU,GCQCG,GAAcC,aAAgB,CACzC3G,GHKuB,WAAmC,IAAlCzC,EAAiC,uDAAzBmH,GAAckC,EAAW,uCACzD,OAAQA,EAAOpK,MACb,KAAKb,EACH,OAAO,2BACF4B,GADL,IAEEwC,WAAW,IAEf,KAAKpE,EACH,OAAO,2BACF4B,GADL,IAEEwC,WAAW,IAEf,QACE,OAAOxC,IGjBX0C,SFK6B,WAAmC,IAAlC1C,EAAiC,uDAAzBmH,GAAckC,EAAW,uCAC/D,OAAQA,EAAOpK,MACb,KAAKb,EACH,OAAO,2BACF4B,GADL,IAEE2C,YAAY,eACP0G,EAAOnK,WAIhB,KAAKd,EACH,OAAO,2BACF4B,GADL,IAEE1B,OAAO,GAAD,oBAAM0B,EAAM1B,QAAZ,CAAoB+K,EAAOnK,YAGrC,KAAKd,EACH,OAAO,2BACF4B,GADL,IAEE2C,YAAa,OAEjB,KAAKvE,EACH,OAAO,2BACF4B,GADL,IAEE1B,OAAQ0B,EAAM1B,OAAOE,KAAI,SAACQ,GACxB,OAAOA,EAAM0F,KAAO2E,EAAOnK,QAAQwF,GAAK2E,EAAOnK,QAAUF,OAI/D,KAAKZ,EACH,OAAO,2BACF4B,GADL,IAEE1B,OAAQ0B,EAAM1B,OAAOgL,QAAO,SAAC7K,GAAD,OAAOA,EAAEiG,KAAO1E,EAAM2C,YAAY+B,MAC9D/B,YAAa,OAGjB,KAAKvE,EACH,OAAO,2BACF4B,GADL,IAEE1B,OAAO,aAAK+K,EAAOnK,WAEvB,KAAKd,EACH,OAAO,eACF+I,IAEP,QACE,OAAOnH,IElDXC,KDNyB,WAAmC,IAAlCD,EAAiC,uDAAzBmH,GAAckC,EAAW,uCAC3D,OAAQA,EAAOpK,MACb,KAAKb,EACH,OAAO,uCACF4B,GACAqJ,EAAOnK,SAFZ,IAGE8J,UAAU,IAEd,KAAK5K,EACH,OAAO,2BACF4B,GADL,IAEEgJ,UAAU,IAGd,KAAK5K,EACH,MAAO,CACL4K,UAAU,GAId,QACE,OAAOhJ,M,SEtBPuJ,GACe,qBAAXC,QACNA,OAAOC,sCACTC,KAMWC,GAAQC,aACnBT,GACAI,GAAiBM,aAAgBC,QCbtBC,GAAc,WAGzB,OACE,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,GAAD,Q,OCJNK,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.3c5611eb.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n\r\n  if (method === \"GET\") {\r\n    return fetch(url);\r\n  } else {\r\n    return fetch(url, {\r\n      method: method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\nconst fetchConToken = (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseUrl}/${endpoint}`;\r\n  const token = localStorage.getItem(\"token\") || \"\";\r\n  if (method === \"GET\") {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        \"x-token\": token,\r\n      },\r\n    });\r\n  } else {\r\n    return fetch(url, {\r\n      method: method,\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"x-token\": token,\r\n      },\r\n\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n};\r\n\r\nexport { fetchSinToken, fetchConToken };\r\n","//1º\r\n//Parte de redux\r\n\r\nexport const types = {\r\n  uiOpenModal: \"[ui] Open modal\",\r\n  uiCloseModal: \"[ui] Close modal\",\r\n\r\n  eventSetActive: \"[event] Set Active\",\r\n  eventLogout: \"[event]\",\r\n  eventSetActiveCell: \"[event] Set Active Cell\",\r\n  eventStartAddNew: \"[event] Start add new\",\r\n  eventAddNew: \"[event] Add new\",\r\n  eventClearActiveEvent: \"[event] Clear Active Event\",\r\n  eventUpdated: \"[event] Event updated\",\r\n  eventDeleted: \"[event] Event deleted\",\r\n  eventLoaded: \"[event] Event loaded\",\r\n\r\n  authCheckingFinish: \"[auth] Finish checking login state\",\r\n  authStartLogin: \"[auth] Start login\",\r\n  authLogin: \"[auth] login\",\r\n  authStartRegister: \"[auth] Start Register\",\r\n  authStartTokenRenew: \"[auth] Start token renew\",\r\n  authLogout: \"[auth] Logout\",\r\n};\r\n","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = [], user) => {\r\n  return events.map((e) => {\r\n    if (e.user._id === user) {\r\n      return {\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n      };\r\n    } else {\r\n      return {};\r\n    }\r\n  });\r\n};\r\n","import { types } from \"../types/types\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid, name } = getState().auth;\r\n    try {\r\n      const rep = await fetchConToken(\"events\", event, \"POST\");\r\n      const body = await rep.json();\r\n\r\n      if (body.ok) {\r\n        event.id = body.evento.id;\r\n        event.user = {\r\n          _id: uid,\r\n          name: name,\r\n        };\r\n        console.log(event);\r\n        dispatch(eventAddNew(event));\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventAddNew = (event) => {\r\n  return {\r\n    type: types.eventAddNew,\r\n    payload: event,\r\n  };\r\n};\r\n\r\nexport const eventSetActive = (event) => {\r\n  return {\r\n    type: types.eventSetActive,\r\n    payload: event,\r\n  };\r\n};\r\n\r\nexport const eventClearActiveEvent = () => {\r\n  return {\r\n    type: types.eventClearActiveEvent,\r\n  };\r\n};\r\n\r\nexport const eventStartUpdate = (event) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const rep = await fetchConToken(`events/${event.id}`, event, \"PUT\");\r\n      const body = await rep.json();\r\n      if (body.ok) {\r\n        dispatch(eventUpdated(event));\r\n      } else {\r\n        Swal.fire(\"Error\", body.msg, \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\nconst eventUpdated = (event) => {\r\n  return {\r\n    type: types.eventUpdated,\r\n    payload: event,\r\n  };\r\n};\r\n\r\nexport const eventStartDelete = () => {\r\n  return async (dispatch, getState) => {\r\n    const { id } = getState().calendar.activeEvent;\r\n\r\n    try {\r\n      const rep = await fetchConToken(`events/${id}`, {}, \"DELETE\");\r\n      const body = await rep.json();\r\n      if (body.ok) {\r\n        dispatch(eventDeleted());\r\n      } else {\r\n        Swal.fire(\"Error\", body.msg, \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventDeleted = () => {\r\n  return {\r\n    type: types.eventDeleted,\r\n  };\r\n};\r\n\r\nexport const eventStartLoading = (user) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const rep = await fetchConToken(\"events\");\r\n      const body = await rep.json();\r\n      const events = prepareEvents(body.eventos, user);\r\n\r\n      dispatch(eventLoaded(events));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventLoaded = (events) => {\r\n  return {\r\n    type: types.eventLoaded,\r\n    payload: events,\r\n  };\r\n};\r\n\r\nexport const eventLogout = () => {\r\n  return {\r\n    type: types.eventLogout,\r\n  };\r\n};\r\n","import { fetchSinToken, fetchConToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\r\n    const body = await resp.json();\r\n    if (body.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n      dispatch(login({ uid: body.uid, name: body.name }));\r\n    } else {\r\n      Swal.fire(\"Error\", body.msg, \"error\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const startRegister = (name, email, password) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken(\r\n      \"auth/new\",\r\n      { name, email, password },\r\n      \"POST\"\r\n    );\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n      dispatch(login({ uid: body.uid, name: body.name }));\r\n    } else {\r\n      Swal.fire(\"Error\", body.msg, \"error\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchConToken(\"auth/renew\");\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n      dispatch(login({ uid: body.uid, name: body.name }));\r\n    } else {\r\n      dispatch(checkingFinish());\r\n    }\r\n  };\r\n};\r\n\r\nconst checkingFinish = () => {\r\n  return {\r\n    type: types.authCheckingFinish,\r\n  };\r\n};\r\n\r\nconst login = (user) => {\r\n  return {\r\n    type: types.authLogin,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(logout());\r\n    dispatch(eventLogout());\r\n  };\r\n};\r\nexport const logout = () => {\r\n  return { type: types.authLogout };\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\n\r\nexport const Navbar = () => {\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-5\">\r\n      <span className=\"navbar-brand\">{name}</span>\r\n\r\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n        <i className=\"fas fa-sign-out-alt\"></i>\r\n        <span> Salir</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","export const messages = {\r\n  allDay: \"Todo el día\",\r\n  previous: \"<\",\r\n  next: \">\",\r\n  today: \"Hoy\",\r\n  month: \"Mes\",\r\n  week: \"Semana\",\r\n  day: \"Día\",\r\n  agenda: \"Agenda\",\r\n  date: \"Fecha\",\r\n  time: \"Hora\",\r\n  event: \"Evento\",\r\n  noEventsInRange: \"No hay eventos en este rango\",\r\n  showMore: (total) => `+ Ver más (${total})`,\r\n};\r\n","import React from \"react\";\r\n\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n  const { title, user } = event;\r\n \r\n  return (\r\n    <div>\r\n      <span>{title}</span>\r\n      <strong>- {user.name}</strong>\r\n    </div>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => {\r\n  return {\r\n    type: types.uiOpenModal,\r\n  };\r\n};\r\n\r\nexport const uiCloseModal = () => {\r\n  return {\r\n    type: types.uiCloseModal,\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\nimport {\r\n  eventClearActiveEvent,\r\n  eventStartAddNew,\r\n  eventStartUpdate,\r\n} from \"../../actions/events\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\nModal.setAppElement(\"#root\");\r\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\r\nconst end1 = moment().minutes(0).seconds(0).add(2, \"hours\");\r\n\r\nconst initEvent = {\r\n  title: \"\",\r\n  notes: \"\",\r\n  start: now.toDate(),\r\n  end: end1.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n  const { modalOpen } = useSelector((state) => state.ui);\r\n  const { activeEvent, activeCell } = useSelector((state) => state.calendar);\r\n\r\n  const dispatch = useDispatch();\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(end1.toDate());\r\n\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n\r\n  const { notes, title, start, end } = formValues;\r\n\r\n  useEffect(() => {\r\n    if (activeEvent) {\r\n      console.log(activeEvent);\r\n      setFormValues(activeEvent);\r\n    } else {\r\n      setFormValues(initEvent);\r\n    }\r\n  }, [activeEvent, setFormValues, activeCell]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActiveEvent());\r\n    setFormValues(initEvent);\r\n  };\r\n\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e,\r\n    });\r\n  };\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e,\r\n    });\r\n  };\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      return Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"La fecha de inicio no puede ser mayor a la de finalización.\",\r\n      });\r\n    }\r\n\r\n    if (title === \"\") {\r\n      return Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"El titulo es obligatorio.\",\r\n      });\r\n    }\r\n\r\n    if (activeEvent) {\r\n      dispatch(eventStartUpdate(formValues));\r\n    } else {\r\n      dispatch(eventStartAddNew(formValues));\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      //   onAfterOpen={afterOpenModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1> {activeEvent ? \"Actualizar Evento\" : \"Nuevo Evento\"} </h1>\r\n      <hr />\r\n      <form className=\"container\" onSubmit={handleSubmitForm}>\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={dateEnd}\r\n            minDate={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Una descripción corta\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Información adicional\r\n          </small>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\n\r\nexport const AddNewFab = () => {\r\n  const dispatch = useDispatch();\r\n  const handleClickNew = () => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n  return (\r\n    <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\r\n      <i className=\"fas fa-plus\"></i>\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { eventStartDelete } from \"../../actions/events\";\r\n\r\nexport const DeleteEventFab = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete = () => {\r\n    dispatch(eventStartDelete());\r\n  };\r\n  return (\r\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n      <i className=\"fas fa-trash\"></i>\r\n    </button>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Navbar } from \"../ui/Navbar\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nimport \"moment/locale/en-in\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { messages } from \"../../helpers/calendar-message-es\";\r\nimport { CalendarEvent } from \"./CalendarEvent\";\r\nimport { CalendarModal } from \"./CalendarModal\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport {\r\n  eventSetActive,\r\n  eventClearActiveEvent,\r\n  eventStartLoading,\r\n} from \"../../actions/events\";\r\nimport { AddNewFab } from \"../ui/AddNewFab\";\r\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nmoment.locale(\"es\");\r\n\r\nexport const CalendarScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { uid } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(eventStartLoading(uid));\r\n  }, [dispatch,uid]);\r\n\r\n  const { events, activeEvent } = useSelector((state) => state.calendar);\r\n  const [lastView, setLastView] = useState(\r\n    localStorage.getItem(\"lastView\") || \"month\"\r\n  );\r\n\r\n  const onDoubleCLick = (e) => {\r\n    dispatch(uiOpenModal());\r\n  };\r\n\r\n  const onSelectEvent = (e) => {\r\n    dispatch(eventSetActive(e));\r\n  };\r\n\r\n  const onViewChange = (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem(\"lastView\", e);\r\n  };\r\n\r\n  const eventStyleGetter = (event, start, end, isSelected) => {\r\n    const style = {\r\n      backgroundColor: uid === event.user._id ? \"#367CF7\" : \"#465660\",\r\n      borderRadius: \"0px\",\r\n      opacity: 0.8,\r\n      display: \"block\",\r\n      color: \"white\",\r\n    };\r\n    return { style };\r\n  };\r\n  const onSelectSlot = (e) => {\r\n    dispatch(eventClearActiveEvent());\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar />\r\n      <div>\r\n        <br />\r\n        <br />\r\n      </div>\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={messages}\r\n        eventPropGetter={eventStyleGetter}\r\n        onDoubleClickEvent={onDoubleCLick}\r\n        onSelectEvent={onSelectEvent}\r\n        onView={onViewChange}\r\n        onSelectSlot={onSelectSlot}\r\n        selectable={true}\r\n        view={lastView}\r\n        components={{\r\n          event: CalendarEvent,\r\n        }}\r\n      />\r\n      <AddNewFab />\r\n      {activeEvent && <DeleteEventFab />}\r\n\r\n      <CalendarModal />\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport \"./login.css\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startLogin, startRegister } from \"../../actions/auth\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const LoginScreen = () => {\r\n  const [formLoginValues, handleLoginInputChange] = useForm({\r\n    lEmail: \"\",\r\n    lPassword: \"\",\r\n  });\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    rName: \"\",\r\n    rEmail: \"\",\r\n    rPassword1: \"\",\r\n    rPassword2: \"\",\r\n  });\r\n\r\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n  const dispatch = useDispatch();\r\n  const { lEmail, lPassword } = formLoginValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLogin(lEmail, lPassword));\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    if (rPassword1 !== rPassword2) {\r\n      return Swal.fire(\r\n        \"Error\",\r\n        \"Las contraseñas tienen que ser iguales.\",\r\n        \"error\"\r\n      );\r\n    } else {\r\n      dispatch(startRegister(rName, rEmail, rPassword1));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"lEmail\"\r\n                value={lEmail}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"lPassword\"\r\n                value={lPassword}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Registro</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                name=\"rName\"\r\n                value={rName}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"rEmail\"\r\n                value={rEmail}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"rPassword1\"\r\n                value={rPassword1}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n                name=\"rPassword2\"\r\n                value={rPassword2}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) => {\r\n        return !isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) => {\r\n        return isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch]);\r\n\r\n  if (checking) {\r\n    return <h5>Espere...</h5>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            exact\r\n            path=\"/login\"\r\n            component={LoginScreen}\r\n            isLoggedIn={!!uid}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/\"\r\n            component={CalendarScreen}\r\n            isLoggedIn={!!uid}\r\n          />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\n/*\r\n2º Redux\r\nReducer es una función pura que toma el estado anterior \r\ny una accion, y devuelve un nuevo estado\r\n*/\r\n\r\n//Por ahora solo vamos a utilizar lo del modal\r\n//y lo ponemos en false el initialState\r\nconst initialState = {\r\n  modalOpen: false,\r\n};\r\n\r\n//Creamos la funcion con un estado y la accion\r\n//Hacemos un switch con el tipo de la accion\r\n//y cogemos los diferentes tipos de accion y la retornamos\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: true,\r\n      };\r\n    case types.uiCloseModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n// {\r\n//   id: 131sadad,\r\n//   title: \"Cumple\",\r\n//   start: moment().toDate(),\r\n//   end: moment().add(2, \"hours\").toDate(),\r\n//   notes: \"ajjaj\",\r\n//   user: {\r\n//     _id: \"123\",\r\n//     name: \"Fernando\",\r\n//   },\r\n// },\r\n\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null,\r\n  activeCell: null,\r\n};\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload],\r\n      };\r\n\r\n    case types.eventClearActiveEvent:\r\n      return {\r\n        ...state,\r\n        activeEvent: null,\r\n      };\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((event) => {\r\n          return event.id === action.payload.id ? action.payload : event;\r\n        }),\r\n      };\r\n\r\n    case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((e) => e.id !== state.activeEvent.id),\r\n        activeEvent: null,\r\n      };\r\n\r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload],\r\n      };\r\n    case types.eventLogout:\r\n      return {\r\n        ...initialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  checking: true,\r\n  //   uid: null,\r\n  //   name: null,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false,\r\n      };\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n      };\r\n\r\n    case types.authLogout: {\r\n      return {\r\n        checking: false,\r\n      };\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\n/*\r\nAquí van a estar todos los reducers:\r\nel de la interfaz, \r\nel de la autentificacion\r\ny el del calendar\r\n*/\r\nexport const rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n//sacado de la documentacion\r\n//es para las devTools de chrome\r\n// y para meter thunk que sirve para llamadas asincronas\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\n// Aqui vamos a crear la store donde se guardaron los datos\r\n// de la aplicación\r\n//1º metemos todos los reducers (en rootReducer ya van todos)\r\n//2º Metemos\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\n\r\n//la store la metemos en el CalendarApp.js con el provider","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { AppRouter } from \"./router/AppRouter\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const CalendarApp = () => {\r\n  //Toda la aplicacion tendrá un provider de redux\r\n  //con la store que vamos a utilizar\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\nimport \"./styles.css\"\n\n\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}